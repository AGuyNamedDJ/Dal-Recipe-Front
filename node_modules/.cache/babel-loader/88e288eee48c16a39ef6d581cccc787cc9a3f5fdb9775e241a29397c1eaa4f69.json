{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Dal-Recipe/Dal-Recipe-Front/src/components/utilities/FetchForHomepage.js\",\n  _s = $RefreshSig$();\n// Import\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Outlet, useNavigate, useOutletContext, useParams } from \"react-router-dom\";\n\n// State\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FetchForHomepage = () => {\n  _s();\n  const [department, setDepartment] = useState([]);\n  const [breakfast, setBreakfast] = useState([]);\n  const [desserts, setDesserts] = useState([]);\n  const [entrees, setEntrees] = useState([]);\n  const [sides, setSides] = useState([]);\n  const contextObject = {\n    departmentState: [department, setDepartment],\n    breakfastState: [breakfast, setBreakfast],\n    entreesState: [entrees, setEntrees],\n    dessertsState: [desserts, setDesserts],\n    sidesState: [sides, setSides]\n  };\n  const navigate = useNavigate();\n\n  // useEffects\n  // fetchAllDepartment\n  useEffect(() => {\n    console.log(\"useEffect being triggered for breakfast hook.\");\n    // async function fetchAllDepartment(){\n    async function fetchAllBreakfast() {\n      try {\n        // const departmentResponse = await fetch(`https://dal-recipe-back.onrender.com/api/department`,{\n        const response = await fetch(`https://dal-recipe-back.onrender.com/api/breakfast`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        // console.log(\"This is the department response:\", departmentResponse);\n        // const departmentData = await departmentResponse.json();\n        // console.log(\"this is the department data:\", departmentData);\n\n        console.log(\"This is the breakfast response:\", response);\n        const data = await response.json().then(data => data);\n        console.log(\"This is the translated json response:\", data);\n\n        // if (!breakfastResponse.ok) {\n        //     throw new Error(breakfastResponse.statusText);\n        // }\n        // const breakfastData = await breakfastResponse.json();\n        // console.log(\"This is the translated json response:\", \n\n        // Department Filter\n        // Breakfast Id == 1\n        // const breakfastData = departmentData.filter(oneDepartment => {\n        //     return oneDepartment.departmentId === 1\n        // })\n\n        // // Entrees Id == 2\n        // const entreesData = departmentData.filter(oneDepartment => {\n        //     return oneDepartment.departmentId === 2\n        // })\n\n        // // Desserts Id == 3\n        // const dessertsData = departmentData.filter(oneDepartment => {\n        //     return oneDepartment.departmentId === 3\n        // })\n\n        // // Sides Id == 4\n        // const sidesData = departmentData.filter(oneDepartment => {\n        //     return oneDepartment.departmentId === 4\n        // })\n\n        // setDepartment(departmentData)\n        setBreakfast(breakfastData);\n        // setEntrees(entreesData)\n        // setDesserts(dessertsData)\n        // setSides(sidesData)\n      } catch (error) {\n        console.log(\"Error:\");\n        console.error(error);\n      }\n    }\n    // fetchAllDepartment()\n    fetchAllBreakfast();\n    console.log(\"End of breakfast hooks.\");\n  }, []);\n\n  // Functional Component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Outlet, {\n      context: contextObject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbar-box\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        context: contextObject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n// Export\n_s(FetchForHomepage, \"UgvGIIM+GJyB6HmimNnzP+0OCIc=\", false, function () {\n  return [useNavigate];\n});\n_c = FetchForHomepage;\nexport default FetchForHomepage;\nvar _c;\n$RefreshReg$(_c, \"FetchForHomepage\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Outlet","useNavigate","useOutletContext","useParams","FetchForHomepage","department","setDepartment","breakfast","setBreakfast","desserts","setDesserts","entrees","setEntrees","sides","setSides","contextObject","departmentState","breakfastState","entreesState","dessertsState","sidesState","navigate","console","log","fetchAllBreakfast","response","fetch","headers","data","json","then","breakfastData","error"],"sources":["/Users/agndj/Desktop/Coding/Dal-Recipe/Dal-Recipe-Front/src/components/utilities/FetchForHomepage.js"],"sourcesContent":["// Import\nimport React, { useState, useEffect} from \"react\";\nimport Navbar from \"./Navbar\";\nimport { Outlet, useNavigate, useOutletContext, useParams} from \"react-router-dom\"\n\n// State\nconst FetchForHomepage = () => {\n    const [department, setDepartment] = useState ([]);\n    const [breakfast, setBreakfast] = useState ([]);\n    const [desserts, setDesserts] = useState ([]);\n    const [entrees, setEntrees] = useState ([]);\n    const [sides, setSides] = useState ([]);\n    const contextObject = {\n        departmentState: [department, setDepartment],\n        breakfastState: [breakfast, setBreakfast],\n        entreesState: [entrees, setEntrees],\n        dessertsState: [desserts, setDesserts],\n        sidesState: [sides, setSides]\n    }\n    const navigate = useNavigate();\n\n// useEffects\n    // fetchAllDepartment\n    useEffect(() => {\n        console.log(\"useEffect being triggered for breakfast hook.\")\n        // async function fetchAllDepartment(){\n        async function fetchAllBreakfast(){            \n            try{\n                // const departmentResponse = await fetch(`https://dal-recipe-back.onrender.com/api/department`,{\n                    const response = await fetch(`https://dal-recipe-back.onrender.com/api/breakfast`,{\n                    headers: {\n                        'Content-Type' : 'application/json'\n                    }\n                })\n                // console.log(\"This is the department response:\", departmentResponse);\n                // const departmentData = await departmentResponse.json();\n                // console.log(\"this is the department data:\", departmentData);\n\n                console.log(\"This is the breakfast response:\", response);\n                const data = await response.json().then(data => data);\n                console.log(\"This is the translated json response:\", data)\n\n                // if (!breakfastResponse.ok) {\n                //     throw new Error(breakfastResponse.statusText);\n                // }\n                // const breakfastData = await breakfastResponse.json();\n                // console.log(\"This is the translated json response:\", \n\n\n\n            // Department Filter\n                // Breakfast Id == 1\n                // const breakfastData = departmentData.filter(oneDepartment => {\n                //     return oneDepartment.departmentId === 1\n                // })\n\n                // // Entrees Id == 2\n                // const entreesData = departmentData.filter(oneDepartment => {\n                //     return oneDepartment.departmentId === 2\n                // })\n\n                // // Desserts Id == 3\n                // const dessertsData = departmentData.filter(oneDepartment => {\n                //     return oneDepartment.departmentId === 3\n                // })\n\n                // // Sides Id == 4\n                // const sidesData = departmentData.filter(oneDepartment => {\n                //     return oneDepartment.departmentId === 4\n                // })\n\n                // setDepartment(departmentData)\n                setBreakfast(breakfastData)\n                // setEntrees(entreesData)\n                // setDesserts(dessertsData)\n                // setSides(sidesData)\n            } catch(error) {\n                console.log(\"Error:\")\n                console.error(error)\n            }\n        }\n        // fetchAllDepartment()\n        fetchAllBreakfast();\n        console.log(\"End of breakfast hooks.\")\n    }, [])\n\n// Functional Component\n    return (\n        <div>\n            \n            <Outlet context={contextObject} />\n            <div id=\"navbar-box\">\n                <Navbar context={contextObject}/>\n            </div>\n        </div>\n    )\n}\n\n// Export\nexport default FetchForHomepage;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACjD,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,MAAM,EAAEC,WAAW,EAAEC,gBAAgB,EAAEC,SAAS,QAAO,kBAAkB;;AAElF;AAAA;AACA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAE,EAAE,CAAC;EACjD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAE,EAAE,CAAC;EAC/C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAE,EAAE,CAAC;EAC7C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAE,EAAE,CAAC;EAC3C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAE,EAAE,CAAC;EACvC,MAAMkB,aAAa,GAAG;IAClBC,eAAe,EAAE,CAACX,UAAU,EAAEC,aAAa,CAAC;IAC5CW,cAAc,EAAE,CAACV,SAAS,EAAEC,YAAY,CAAC;IACzCU,YAAY,EAAE,CAACP,OAAO,EAAEC,UAAU,CAAC;IACnCO,aAAa,EAAE,CAACV,QAAQ,EAAEC,WAAW,CAAC;IACtCU,UAAU,EAAE,CAACP,KAAK,EAAEC,QAAQ;EAChC,CAAC;EACD,MAAMO,QAAQ,GAAGpB,WAAW,EAAE;;EAElC;EACI;EACAH,SAAS,CAAC,MAAM;IACZwB,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;IAC5D;IACA,eAAeC,iBAAiB,GAAE;MAC9B,IAAG;QACC;QACI,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAmD,EAAC;UAClFC,OAAO,EAAE;YACL,cAAc,EAAG;UACrB;QACJ,CAAC,CAAC;QACF;QACA;QACA;;QAEAL,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEE,QAAQ,CAAC;QACxD,MAAMG,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE,CAACC,IAAI,CAACF,IAAI,IAAIA,IAAI,CAAC;QACrDN,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEK,IAAI,CAAC;;QAE1D;QACA;QACA;QACA;QACA;;QAIJ;QACI;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA;;QAEA;QACApB,YAAY,CAACuB,aAAa,CAAC;QAC3B;QACA;QACA;MACJ,CAAC,CAAC,OAAMC,KAAK,EAAE;QACXV,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QACrBD,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ;IACA;IACAR,iBAAiB,EAAE;IACnBF,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAEV;EACI,oBACI;IAAA,wBAEI,QAAC,MAAM;MAAC,OAAO,EAAER;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAClC;MAAK,EAAE,EAAC,YAAY;MAAA,uBAChB,QAAC,MAAM;QAAC,OAAO,EAAEA;MAAc;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;;AAED;AAAA,GA5FMX,gBAAgB;EAAA,QAaDH,WAAW;AAAA;AAAA,KAb1BG,gBAAgB;AA6FtB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}