{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Dal-Recipe/Dal-Recipe-Front/src/components/pages/Breakfast.js\",\n  _s = $RefreshSig$();\n// Import\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useOutletContext, useParams } from \"react-router-dom\";\n\n// Functional Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breakfast = () => {\n  _s();\n  const {\n    breakfastState: [breakfast, setBreakfast]\n  } = useOutletContext();\n\n  // fetchBreakfastData\n  useEffect(() => {\n    async function fetchBreakfastData() {\n      try {\n        // Fetch data;\n        const response = await fetch(\"https://dal-recipe-back.onrender.com/api/breakfast\", {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        //Translate the promise data;\n        // console.log(\"This is the Breakfast response:\", response)\n        const breakfastData = await response.json();\n        // console.log(\"This is the translated Breakfast JSON response:\", breakfastData);\n\n        //Save the data to the State;\n        setBreakfast(breakfastData);\n      } catch (error) {\n        console.log(\"Error fetching Breakfast Data:\");\n        console.log(error);\n      }\n    }\n    fetchBreakfastData();\n  }, []);\n  console.log(\"What i wanat see\", breakfast[8]);\n  {/* This return format is to map all. */}\n  return breakfast && breakfast.length ? breakfast.map((recipe, idx) => {\n    /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"title-text\",\n      children: \"Breakfast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          id: \"recipe-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"recipe-text\",\n          children: recipe.breakfastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"recipe-type\",\n          children: [\"Serving Size: \", recipe.serving_size]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"recipe-ttp\",\n          children: [\"Prep Time: \", recipe.time_to_prepare]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"view-recipe-button\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            id: \"view-recipe-button\",\n            class: \"link\",\n            to: `/department/breakfast/${breakfast.breakfastId}`,\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this);\n  }) : \"No Recipes to display, our Chefs are busy preparing for you!\";\n};\n\n// Export\n_s(Breakfast, \"7Oo6UIsGLP7bGB3Dzpq+xdpwJ/M=\", false, function () {\n  return [useOutletContext];\n});\n_c = Breakfast;\nexport default Breakfast;\n{/* <div key={item.breakfastId}>\n <h2>{item.breakfastName}</h2>\n <p>{item.image}</p>\n </div> */}\nvar _c;\n$RefreshReg$(_c, \"Breakfast\");","map":{"version":3,"names":["React","useEffect","useState","Link","useOutletContext","useParams","Breakfast","breakfastState","breakfast","setBreakfast","fetchBreakfastData","response","fetch","headers","breakfastData","json","error","console","log","length","map","recipe","idx","image","breakfastName","serving_size","time_to_prepare","breakfastId"],"sources":["/Users/agndj/Desktop/Coding/Dal-Recipe/Dal-Recipe-Front/src/components/pages/Breakfast.js"],"sourcesContent":["// Import\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useOutletContext, useParams } from \"react-router-dom\";\n\n// Functional Component\nconst Breakfast = () => {\n    const { breakfastState: [breakfast, setBreakfast] } = useOutletContext();\n\n    // fetchBreakfastData\n    useEffect(() => {\n        async function fetchBreakfastData () {\n            try {\n                // Fetch data;\n                const response = await fetch (\"https://dal-recipe-back.onrender.com/api/breakfast\",{\n                    headers: {\n                        'Content-Type' : 'application/json'\n                    }\n                })\n                //Translate the promise data;\n                // console.log(\"This is the Breakfast response:\", response)\n                const breakfastData = await response.json();\n                // console.log(\"This is the translated Breakfast JSON response:\", breakfastData);\n\n                //Save the data to the State;\n                setBreakfast(breakfastData)\n            } catch (error) {\n                console.log(\"Error fetching Breakfast Data:\" )\n                console.log(error);\n            }\n        }\n        fetchBreakfastData();\n    }, [])\n\nconsole.log(\"What i wanat see\", breakfast[8])\n\n    {/* This return format is to map all. */}\n    return(\n        \n        breakfast && breakfast.length ? breakfast.map((recipe, idx) => {  \n            <p class=\"title-text\">Breakfast</p>          \n            return (\n                <div key={idx} className=\"recipe-box\">\n                    {/* Image */}\n                    <div>\n                        <img src={recipe.image} id=\"recipe-image\"></img>\n                    </div>\n                    \n                    {/* Item Details */}\n                    <div>\n                        <p id=\"recipe-text\">{recipe.breakfastName}</p>\n                        <p id=\"recipe-type\">Serving Size: {recipe.serving_size}</p>\n                        <p id=\"recipe-ttp\">Prep Time: {recipe.time_to_prepare}</p>\n                        <button id=\"view-recipe-button\"><Link id=\"view-recipe-button\" class=\"link\" to={`/department/breakfast/${breakfast.breakfastId}`}>View</Link></button>\n                    </div>\n                </div>\n            )\n        }) : \"No Recipes to display, our Chefs are busy preparing for you!\"\n    )\n};\n\n// Export\nexport default Breakfast;\n\n{/* <div key={item.breakfastId}>\n<h2>{item.breakfastName}</h2>\n<p>{item.image}</p>\n</div> */}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,gBAAgB,EAAEC,SAAS,QAAQ,kBAAkB;;AAEpE;AAAA;AACA,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM;IAAEC,cAAc,EAAE,CAACC,SAAS,EAAEC,YAAY;EAAE,CAAC,GAAGL,gBAAgB,EAAE;;EAExE;EACAH,SAAS,CAAC,MAAM;IACZ,eAAeS,kBAAkB,GAAI;MACjC,IAAI;QACA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,oDAAoD,EAAC;UAC/EC,OAAO,EAAE;YACL,cAAc,EAAG;UACrB;QACJ,CAAC,CAAC;QACF;QACA;QACA,MAAMC,aAAa,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QAC3C;;QAEA;QACAN,YAAY,CAACK,aAAa,CAAC;MAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAE;QAC9CD,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ;IACAN,kBAAkB,EAAE;EACxB,CAAC,EAAE,EAAE,CAAC;EAEVO,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEV,SAAS,CAAC,CAAC,CAAC,CAAC;EAEzC,CAAC;EACD,OAEIA,SAAS,IAAIA,SAAS,CAACW,MAAM,GAAGX,SAAS,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;IAC3D;MAAG,KAAK,EAAC,YAAY;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAI;IACnC,oBACI;MAAe,SAAS,EAAC,YAAY;MAAA,wBAEjC;QAAA,uBACI;UAAK,GAAG,EAAED,MAAM,CAACE,KAAM;UAAC,EAAE,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA;MAAO;QAAA;QAAA;QAAA;MAAA,QAC9C,eAGN;QAAA,wBACI;UAAG,EAAE,EAAC,aAAa;UAAA,UAAEF,MAAM,CAACG;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK,eAC9C;UAAG,EAAE,EAAC,aAAa;UAAA,WAAC,gBAAc,EAACH,MAAM,CAACI,YAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC3D;UAAG,EAAE,EAAC,YAAY;UAAA,WAAC,aAAW,EAACJ,MAAM,CAACK,eAAe;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAC1D;UAAQ,EAAE,EAAC,oBAAoB;UAAA,uBAAC,QAAC,IAAI;YAAC,EAAE,EAAC,oBAAoB;YAAC,KAAK,EAAC,MAAM;YAAC,EAAE,EAAG,yBAAwBlB,SAAS,CAACmB,WAAY,EAAE;YAAA,UAAC;UAAI;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACnJ;IAAA,GAZAL,GAAG;MAAA;MAAA;MAAA;IAAA,QAaP;EAEd,CAAC,CAAC,GAAG,8DAA8D;AAE3E,CAAC;;AAED;AAAA,GAvDMhB,SAAS;EAAA,QAC2CF,gBAAgB;AAAA;AAAA,KADpEE,SAAS;AAwDf,eAAeA,SAAS;AAExB,CAAC;AACD;AACA;AACA,UAHC;AAGS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}