{"ast":null,"code":"var _jsxFileName = \"/Users/agndj/Desktop/Coding/Dal-Recipe/Dal-Recipe-Front/src/components/pages/Breakfast.js\",\n  _s = $RefreshSig$();\n// Import\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useOutletContext, useParams } from \"react-router-dom\";\n\n// Functional Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Breakfast = () => {\n  _s();\n  const {\n    breakfastState: [breakfast, setBreakfast]\n  } = useOutletContext();\n  {/* This return format is to map all. */}\n  return breakfast && breakfast.length ? breakfast.map((recipe, idx) => {\n    /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"title-text\",\n      children: \"Breakfast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"recipe-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recipe-box-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"department-box-text\",\n          children: recipe.breakfastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          id: \"recipe-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"DINNERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"department-box-text\",\n          children: recipe.time_to_prepare\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"view-recipe-button\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            id: \"view-recipe-button link\",\n            to: `/department/breakfast/${recipe.breakfastId}`,\n            children: \"View Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this)\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this);\n  }) : \"No Recipes to display, our Chefs are busy preparing for you!\";\n};\n\n// Export\n_s(Breakfast, \"HgnfQfmC2yArKYH0Pii9J9sxP0c=\", false, function () {\n  return [useOutletContext];\n});\n_c = Breakfast;\nexport default Breakfast;\n{/* <div key={item.breakfastId}>\n <h2>{item.breakfastName}</h2>\n <p>{item.image}</p>\n </div> */}\nvar _c;\n$RefreshReg$(_c, \"Breakfast\");","map":{"version":3,"names":["React","useEffect","useState","Link","useOutletContext","useParams","Breakfast","breakfastState","breakfast","setBreakfast","length","map","recipe","idx","breakfastName","image","time_to_prepare","breakfastId"],"sources":["/Users/agndj/Desktop/Coding/Dal-Recipe/Dal-Recipe-Front/src/components/pages/Breakfast.js"],"sourcesContent":["// Import\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useOutletContext, useParams } from \"react-router-dom\";\n\n// Functional Component\nconst Breakfast = () => {\n    const { breakfastState: [breakfast, setBreakfast] } = useOutletContext();\n\n    {/* This return format is to map all. */}\n    return(\n        \n        breakfast && breakfast.length ? breakfast.map((recipe, idx) => {  \n            <p class=\"title-text\">Breakfast</p>          \n            return (\n                <div key={idx} id=\"recipe-box\">\n                    <div id=\"recipe-box-item\">\n\n                        {/* Item Template */}\n                        <p id=\"department-box-text\">{recipe.breakfastName}</p>\n                        <img src={recipe.image} id=\"recipe-image\"></img>\n                        <p>DINNERS</p>\n                        <p id=\"department-box-text\">{recipe.time_to_prepare}</p>\n                        <button id=\"view-recipe-button\"><Link id=\"view-recipe-button link\" to={`/department/breakfast/${recipe.breakfastId}`}>View Recipe</Link></button>\n                    </div>\n                </div>\n            )\n        }) : \"No Recipes to display, our Chefs are busy preparing for you!\"\n    )\n};\n\n// Export\nexport default Breakfast;\n\n{/* <div key={item.breakfastId}>\n<h2>{item.breakfastName}</h2>\n<p>{item.image}</p>\n</div> */}\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,gBAAgB,EAAEC,SAAS,QAAQ,kBAAkB;;AAEpE;AAAA;AACA,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM;IAAEC,cAAc,EAAE,CAACC,SAAS,EAAEC,YAAY;EAAE,CAAC,GAAGL,gBAAgB,EAAE;EAExE,CAAC;EACD,OAEII,SAAS,IAAIA,SAAS,CAACE,MAAM,GAAGF,SAAS,CAACG,GAAG,CAAC,CAACC,MAAM,EAAEC,GAAG,KAAK;IAC3D;MAAG,KAAK,EAAC,YAAY;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAI;IACnC,oBACI;MAAe,EAAE,EAAC,YAAY;MAAA,uBAC1B;QAAK,EAAE,EAAC,iBAAiB;QAAA,wBAGrB;UAAG,EAAE,EAAC,qBAAqB;UAAA,UAAED,MAAM,CAACE;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK,eACtD;UAAK,GAAG,EAAEF,MAAM,CAACG,KAAM;UAAC,EAAE,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA,QAAO,eAChD;UAAA,UAAG;QAAO;UAAA;UAAA;UAAA;QAAA,QAAI,eACd;UAAG,EAAE,EAAC,qBAAqB;UAAA,UAAEH,MAAM,CAACI;QAAe;UAAA;UAAA;UAAA;QAAA,QAAK,eACxD;UAAQ,EAAE,EAAC,oBAAoB;UAAA,uBAAC,QAAC,IAAI;YAAC,EAAE,EAAC,yBAAyB;YAAC,EAAE,EAAG,yBAAwBJ,MAAM,CAACK,WAAY,EAAE;YAAA,UAAC;UAAW;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IAC/I,GATAJ,GAAG;MAAA;MAAA;MAAA;IAAA,QAUP;EAEd,CAAC,CAAC,GAAG,8DAA8D;AAE3E,CAAC;;AAED;AAAA,GAzBMP,SAAS;EAAA,QAC2CF,gBAAgB;AAAA;AAAA,KADpEE,SAAS;AA0Bf,eAAeA,SAAS;AAExB,CAAC;AACD;AACA;AACA,UAHC;AAGS;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}